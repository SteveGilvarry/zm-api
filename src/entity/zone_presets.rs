//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use super::sea_orm_active_enums::CheckMethod;
use super::sea_orm_active_enums::ZoneType;
use super::sea_orm_active_enums::Units;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ZonePresets")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: u32,
    #[sea_orm(column_name = "Name")]
    pub name: String,
    #[sea_orm(column_name = "Type")]
    pub r#type: ZoneType,
    #[sea_orm(column_name = "Units")]
    pub units: Units,
    #[sea_orm(column_name = "CheckMethod")]
    pub check_method: CheckMethod,
    #[sea_orm(column_name = "MinPixelThreshold")]
    pub min_pixel_threshold: Option<u16>,
    #[sea_orm(column_name = "MaxPixelThreshold")]
    pub max_pixel_threshold: Option<u16>,
    #[sea_orm(column_name = "MinAlarmPixels")]
    pub min_alarm_pixels: Option<u32>,
    #[sea_orm(column_name = "MaxAlarmPixels")]
    pub max_alarm_pixels: Option<u32>,
    #[sea_orm(column_name = "FilterX")]
    pub filter_x: Option<u8>,
    #[sea_orm(column_name = "FilterY")]
    pub filter_y: Option<u8>,
    #[sea_orm(column_name = "MinFilterPixels")]
    pub min_filter_pixels: Option<u32>,
    #[sea_orm(column_name = "MaxFilterPixels")]
    pub max_filter_pixels: Option<u32>,
    #[sea_orm(column_name = "MinBlobPixels")]
    pub min_blob_pixels: Option<u32>,
    #[sea_orm(column_name = "MaxBlobPixels")]
    pub max_blob_pixels: Option<u32>,
    #[sea_orm(column_name = "MinBlobs")]
    pub min_blobs: Option<u16>,
    #[sea_orm(column_name = "MaxBlobs")]
    pub max_blobs: Option<u16>,
    #[sea_orm(column_name = "OverloadFrames")]
    pub overload_frames: u16,
    #[sea_orm(column_name = "ExtendAlarmFrames")]
    pub extend_alarm_frames: u16,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
