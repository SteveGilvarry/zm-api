//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Stats")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: u32,
    #[sea_orm(column_name = "MonitorId")]
    pub monitor_id: u32,
    #[sea_orm(column_name = "ZoneId")]
    pub zone_id: u32,
    #[sea_orm(column_name = "EventId")]
    pub event_id: u64,
    #[sea_orm(column_name = "FrameId")]
    pub frame_id: u32,
    #[sea_orm(column_name = "PixelDiff")]
    pub pixel_diff: u8,
    #[sea_orm(column_name = "AlarmPixels")]
    pub alarm_pixels: u32,
    #[sea_orm(column_name = "FilterPixels")]
    pub filter_pixels: u32,
    #[sea_orm(column_name = "BlobPixels")]
    pub blob_pixels: u32,
    #[sea_orm(column_name = "Blobs")]
    pub blobs: u16,
    #[sea_orm(column_name = "MinBlobSize")]
    pub min_blob_size: u32,
    #[sea_orm(column_name = "MaxBlobSize")]
    pub max_blob_size: u32,
    #[sea_orm(column_name = "MinX")]
    pub min_x: u16,
    #[sea_orm(column_name = "MaxX")]
    pub max_x: u16,
    #[sea_orm(column_name = "MinY")]
    pub min_y: u16,
    #[sea_orm(column_name = "MaxY")]
    pub max_y: u16,
    #[sea_orm(column_name = "Score")]
    pub score: u16,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
