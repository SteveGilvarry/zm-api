//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Groups")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: u32,
    #[sea_orm(column_name = "Name")]
    pub name: String,
    #[sea_orm(column_name = "ParentId")]
    pub parent_id: Option<u32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::groups_permissions::Entity")]
    GroupsPermissions,
}

impl Related<super::groups_permissions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GroupsPermissions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
