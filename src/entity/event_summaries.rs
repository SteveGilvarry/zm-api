//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Event_Summaries")]
pub struct Model {
    #[sea_orm(column_name = "MonitorId", primary_key, auto_increment = false)]
    pub monitor_id: u32,
    #[sea_orm(column_name = "TotalEvents")]
    pub total_events: Option<i32>,
    #[sea_orm(column_name = "TotalEventDiskSpace")]
    pub total_event_disk_space: Option<i64>,
    #[sea_orm(column_name = "HourEvents")]
    pub hour_events: Option<i32>,
    #[sea_orm(column_name = "HourEventDiskSpace")]
    pub hour_event_disk_space: Option<i64>,
    #[sea_orm(column_name = "DayEvents")]
    pub day_events: Option<i32>,
    #[sea_orm(column_name = "DayEventDiskSpace")]
    pub day_event_disk_space: Option<i64>,
    #[sea_orm(column_name = "WeekEvents")]
    pub week_events: Option<i32>,
    #[sea_orm(column_name = "WeekEventDiskSpace")]
    pub week_event_disk_space: Option<i64>,
    #[sea_orm(column_name = "MonthEvents")]
    pub month_events: Option<i32>,
    #[sea_orm(column_name = "MonthEventDiskSpace")]
    pub month_event_disk_space: Option<i64>,
    #[sea_orm(column_name = "ArchivedEvents")]
    pub archived_events: Option<i32>,
    #[sea_orm(column_name = "ArchivedEventDiskSpace")]
    pub archived_event_disk_space: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
