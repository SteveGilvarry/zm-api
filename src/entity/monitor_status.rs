//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use super::sea_orm_active_enums::Status;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Monitor_Status")]
pub struct Model {
    #[sea_orm(column_name = "MonitorId", primary_key, auto_increment = false)]
    pub monitor_id: u32,
    #[sea_orm(column_name = "Status")]
    pub status: Status,
    #[sea_orm(column_name = "CaptureFPS", column_type = "Decimal(Some((10, 2)))")]
    pub capture_fps: Decimal,
    #[sea_orm(column_name = "AnalysisFPS", column_type = "Decimal(Some((5, 2)))")]
    pub analysis_fps: Decimal,
    #[sea_orm(column_name = "CaptureBandwidth")]
    pub capture_bandwidth: i32,
    #[sea_orm(column_name = "UpdatedOn")]
    pub updated_on: DateTimeUtc,
    #[sea_orm(column_name = "DayEventDiskSpace")]
    pub day_event_disk_space: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
