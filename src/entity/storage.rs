//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use super::sea_orm_active_enums::Scheme;
use super::sea_orm_active_enums::StorageType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Storage")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: u16,
    #[sea_orm(column_name = "Path")]
    pub path: String,
    #[sea_orm(column_name = "Name")]
    pub name: String,
    #[sea_orm(column_name = "Type")]
    pub r#type: StorageType,
    #[sea_orm(column_name = "Url")]
    pub url: Option<String>,
    #[sea_orm(column_name = "DiskSpace")]
    pub disk_space: Option<i64>,
    #[sea_orm(column_name = "Scheme")]
    pub scheme: Scheme,
    #[sea_orm(column_name = "ServerId")]
    pub server_id: Option<u32>,
    #[sea_orm(column_name = "DoDelete")]
    pub do_delete: i8,
    #[sea_orm(column_name = "Enabled")]
    pub enabled: i8,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
