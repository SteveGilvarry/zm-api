//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use super::sea_orm_active_enums::{MonitorType};
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Controls")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: u32,
    #[sea_orm(column_name = "Name")]
    pub name: String,
    #[sea_orm(column_name = "Type")]
    pub r#type: MonitorType,
    #[sea_orm(column_name = "Protocol")]
    pub protocol: Option<String>,
    #[sea_orm(column_name = "CanWake")]
    pub can_wake: u8,
    #[sea_orm(column_name = "CanSleep")]
    pub can_sleep: u8,
    #[sea_orm(column_name = "CanReset")]
    pub can_reset: u8,
    #[sea_orm(column_name = "CanReboot")]
    pub can_reboot: u8,
    #[sea_orm(column_name = "CanZoom")]
    pub can_zoom: u8,
    #[sea_orm(column_name = "CanAutoZoom")]
    pub can_auto_zoom: u8,
    #[sea_orm(column_name = "CanZoomAbs")]
    pub can_zoom_abs: u8,
    #[sea_orm(column_name = "CanZoomRel")]
    pub can_zoom_rel: u8,
    #[sea_orm(column_name = "CanZoomCon")]
    pub can_zoom_con: u8,
    #[sea_orm(column_name = "MinZoomRange")]
    pub min_zoom_range: Option<u32>,
    #[sea_orm(column_name = "MaxZoomRange")]
    pub max_zoom_range: Option<u32>,
    #[sea_orm(column_name = "MinZoomStep")]
    pub min_zoom_step: Option<u32>,
    #[sea_orm(column_name = "MaxZoomStep")]
    pub max_zoom_step: Option<u32>,
    #[sea_orm(column_name = "HasZoomSpeed")]
    pub has_zoom_speed: u8,
    #[sea_orm(column_name = "MinZoomSpeed")]
    pub min_zoom_speed: Option<u32>,
    #[sea_orm(column_name = "MaxZoomSpeed")]
    pub max_zoom_speed: Option<u32>,
    #[sea_orm(column_name = "CanFocus")]
    pub can_focus: u8,
    #[sea_orm(column_name = "CanAutoFocus")]
    pub can_auto_focus: u8,
    #[sea_orm(column_name = "CanFocusAbs")]
    pub can_focus_abs: u8,
    #[sea_orm(column_name = "CanFocusRel")]
    pub can_focus_rel: u8,
    #[sea_orm(column_name = "CanFocusCon")]
    pub can_focus_con: u8,
    #[sea_orm(column_name = "MinFocusRange")]
    pub min_focus_range: Option<u32>,
    #[sea_orm(column_name = "MaxFocusRange")]
    pub max_focus_range: Option<u32>,
    #[sea_orm(column_name = "MinFocusStep")]
    pub min_focus_step: Option<u32>,
    #[sea_orm(column_name = "MaxFocusStep")]
    pub max_focus_step: Option<u32>,
    #[sea_orm(column_name = "HasFocusSpeed")]
    pub has_focus_speed: u8,
    #[sea_orm(column_name = "MinFocusSpeed")]
    pub min_focus_speed: Option<u32>,
    #[sea_orm(column_name = "MaxFocusSpeed")]
    pub max_focus_speed: Option<u32>,
    #[sea_orm(column_name = "CanIris")]
    pub can_iris: u8,
    #[sea_orm(column_name = "CanAutoIris")]
    pub can_auto_iris: u8,
    #[sea_orm(column_name = "CanIrisAbs")]
    pub can_iris_abs: u8,
    #[sea_orm(column_name = "CanIrisRel")]
    pub can_iris_rel: u8,
    #[sea_orm(column_name = "CanIrisCon")]
    pub can_iris_con: u8,
    #[sea_orm(column_name = "MinIrisRange")]
    pub min_iris_range: Option<u32>,
    #[sea_orm(column_name = "MaxIrisRange")]
    pub max_iris_range: Option<u32>,
    #[sea_orm(column_name = "MinIrisStep")]
    pub min_iris_step: Option<u32>,
    #[sea_orm(column_name = "MaxIrisStep")]
    pub max_iris_step: Option<u32>,
    #[sea_orm(column_name = "HasIrisSpeed")]
    pub has_iris_speed: u8,
    #[sea_orm(column_name = "MinIrisSpeed")]
    pub min_iris_speed: Option<u32>,
    #[sea_orm(column_name = "MaxIrisSpeed")]
    pub max_iris_speed: Option<u32>,
    #[sea_orm(column_name = "CanGain")]
    pub can_gain: u8,
    #[sea_orm(column_name = "CanAutoGain")]
    pub can_auto_gain: u8,
    #[sea_orm(column_name = "CanGainAbs")]
    pub can_gain_abs: u8,
    #[sea_orm(column_name = "CanGainRel")]
    pub can_gain_rel: u8,
    #[sea_orm(column_name = "CanGainCon")]
    pub can_gain_con: u8,
    #[sea_orm(column_name = "MinGainRange")]
    pub min_gain_range: Option<u32>,
    #[sea_orm(column_name = "MaxGainRange")]
    pub max_gain_range: Option<u32>,
    #[sea_orm(column_name = "MinGainStep")]
    pub min_gain_step: Option<u32>,
    #[sea_orm(column_name = "MaxGainStep")]
    pub max_gain_step: Option<u32>,
    #[sea_orm(column_name = "HasGainSpeed")]
    pub has_gain_speed: u8,
    #[sea_orm(column_name = "MinGainSpeed")]
    pub min_gain_speed: Option<u32>,
    #[sea_orm(column_name = "MaxGainSpeed")]
    pub max_gain_speed: Option<u32>,
    #[sea_orm(column_name = "CanWhite")]
    pub can_white: u8,
    #[sea_orm(column_name = "CanAutoWhite")]
    pub can_auto_white: u8,
    #[sea_orm(column_name = "CanWhiteAbs")]
    pub can_white_abs: u8,
    #[sea_orm(column_name = "CanWhiteRel")]
    pub can_white_rel: u8,
    #[sea_orm(column_name = "CanWhiteCon")]
    pub can_white_con: u8,
    #[sea_orm(column_name = "MinWhiteRange")]
    pub min_white_range: Option<u32>,
    #[sea_orm(column_name = "MaxWhiteRange")]
    pub max_white_range: Option<u32>,
    #[sea_orm(column_name = "MinWhiteStep")]
    pub min_white_step: Option<u32>,
    #[sea_orm(column_name = "MaxWhiteStep")]
    pub max_white_step: Option<u32>,
    #[sea_orm(column_name = "HasWhiteSpeed")]
    pub has_white_speed: u8,
    #[sea_orm(column_name = "MinWhiteSpeed")]
    pub min_white_speed: Option<u32>,
    #[sea_orm(column_name = "MaxWhiteSpeed")]
    pub max_white_speed: Option<u32>,
    #[sea_orm(column_name = "HasPresets")]
    pub has_presets: u8,
    #[sea_orm(column_name = "NumPresets")]
    pub num_presets: u8,
    #[sea_orm(column_name = "HasHomePreset")]
    pub has_home_preset: u8,
    #[sea_orm(column_name = "CanSetPresets")]
    pub can_set_presets: u8,
    #[sea_orm(column_name = "CanMove")]
    pub can_move: u8,
    #[sea_orm(column_name = "CanMoveDiag")]
    pub can_move_diag: u8,
    #[sea_orm(column_name = "CanMoveMap")]
    pub can_move_map: u8,
    #[sea_orm(column_name = "CanMoveAbs")]
    pub can_move_abs: u8,
    #[sea_orm(column_name = "CanMoveRel")]
    pub can_move_rel: u8,
    #[sea_orm(column_name = "CanMoveCon")]
    pub can_move_con: u8,
    #[sea_orm(column_name = "CanPan")]
    pub can_pan: u8,
    #[sea_orm(column_name = "MinPanRange")]
    pub min_pan_range: Option<i32>,
    #[sea_orm(column_name = "MaxPanRange")]
    pub max_pan_range: Option<i32>,
    #[sea_orm(column_name = "MinPanStep")]
    pub min_pan_step: Option<i32>,
    #[sea_orm(column_name = "MaxPanStep")]
    pub max_pan_step: Option<i32>,
    #[sea_orm(column_name = "HasPanSpeed")]
    pub has_pan_speed: u8,
    #[sea_orm(column_name = "MinPanSpeed")]
    pub min_pan_speed: Option<i32>,
    #[sea_orm(column_name = "MaxPanSpeed")]
    pub max_pan_speed: Option<i32>,
    #[sea_orm(column_name = "HasTurboPan")]
    pub has_turbo_pan: u8,
    #[sea_orm(column_name = "TurboPanSpeed")]
    pub turbo_pan_speed: Option<i32>,
    #[sea_orm(column_name = "CanTilt")]
    pub can_tilt: u8,
    #[sea_orm(column_name = "MinTiltRange")]
    pub min_tilt_range: Option<i32>,
    #[sea_orm(column_name = "MaxTiltRange")]
    pub max_tilt_range: Option<i32>,
    #[sea_orm(column_name = "MinTiltStep")]
    pub min_tilt_step: Option<i32>,
    #[sea_orm(column_name = "MaxTiltStep")]
    pub max_tilt_step: Option<i32>,
    #[sea_orm(column_name = "HasTiltSpeed")]
    pub has_tilt_speed: u8,
    #[sea_orm(column_name = "MinTiltSpeed")]
    pub min_tilt_speed: Option<i32>,
    #[sea_orm(column_name = "MaxTiltSpeed")]
    pub max_tilt_speed: Option<i32>,
    #[sea_orm(column_name = "HasTurboTilt")]
    pub has_turbo_tilt: u8,
    #[sea_orm(column_name = "TurboTiltSpeed")]
    pub turbo_tilt_speed: Option<i32>,
    #[sea_orm(column_name = "CanAutoScan")]
    pub can_auto_scan: u8,
    #[sea_orm(column_name = "NumScanPaths")]
    pub num_scan_paths: u8,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
